#!/usr/bin/env node
/**
 * Script de prueba del health endpoint
 * Ejecutar: node scripts/test-health.js
 */

const http = require('http');

const BASE_URL = 'localhost';
const PORT = 5001;
const PATH = '/demo-atom-challenge/us-central1/api/api/health';

console.log('üß™ Probando Health Endpoint...\n');
console.log(`üìç URL: http://${BASE_URL}:${PORT}${PATH}\n`);

const options = {
  hostname: BASE_URL,
  port: PORT,
  path: PATH,
  method: 'GET',
  headers: {
    Origin: 'http://localhost:4200',
  },
};

const req = http.request(options, (res) => {
  let data = '';

  console.log(`‚úÖ Status Code: ${res.statusCode}`);
  console.log(`üìã Headers:`);
  Object.keys(res.headers).forEach((key) => {
    console.log(`   ${key}: ${res.headers[key]}`);
  });
  console.log('');

  res.on('data', (chunk) => {
    data += chunk;
  });

  res.on('end', () => {
    try {
      const json = JSON.parse(data);
      console.log('üì¶ Response Body:');
      console.log(JSON.stringify(json, null, 2));
      console.log('');

      // Validaciones
      console.log('üîç Validaciones:');
      console.log(`   ‚úÖ Status es "ok": ${json.status === 'ok' ? '‚úì' : '‚úó'}`);
      console.log(`   ‚úÖ Tiene mensaje: ${json.message ? '‚úì' : '‚úó'}`);
      console.log(`   ‚úÖ Tiene timestamp: ${json.timestamp ? '‚úì' : '‚úó'}`);
      console.log(`   ‚úÖ Tiene version: ${json.version ? '‚úì' : '‚úó'}`);
      console.log(
        `   ‚úÖ CORS header presente: ${res.headers['access-control-allow-origin'] ? '‚úì' : '‚úó'}`
      );

      const timestamp = new Date(json.timestamp);
      const isValidDate = !isNaN(timestamp.getTime());
      console.log(`   ‚úÖ Timestamp v√°lido: ${isValidDate ? '‚úì' : '‚úó'}`);

      console.log('\n‚ú® Prueba completada!\n');
    } catch (error) {
      console.error('‚ùå Error parsing JSON:', error.message);
      console.log('Raw data:', data);
    }
  });
});

req.on('error', (error) => {
  console.error('‚ùå Error:', error.message);
  console.log('\n‚ö†Ô∏è  Aseg√∫rate de que los emulators est√©n corriendo:');
  console.log('   pnpm run emulators\n');
});

req.end();
